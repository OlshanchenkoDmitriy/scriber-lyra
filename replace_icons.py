#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–º–µ–Ω—ã –∏–∫–æ–Ω–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è LinguaScribe
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ–ø–∏—Ä—É–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–ø–∫–∏ Android
"""

import os
import shutil
import glob
from pathlib import Path

def replace_android_icons():
    """–ó–∞–º–µ–Ω—è–µ—Ç –∏–∫–æ–Ω–∫–∏ –≤ Android –ø—Ä–æ–µ–∫—Ç–µ"""
    
    # –ü—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º Android
    android_base = "android/app/src/main/res"
    icon_mappings = {
        "icon-mipmap-mdpi-48x48.png": f"{android_base}/mipmap-mdpi/ic_launcher.png",
        "icon-mipmap-hdpi-72x72.png": f"{android_base}/mipmap-hdpi/ic_launcher.png",
        "icon-mipmap-xhdpi-96x96.png": f"{android_base}/mipmap-xhdpi/ic_launcher.png",
        "icon-mipmap-xxhdpi-144x144.png": f"{android_base}/mipmap-xxhdpi/ic_launcher.png",
        "icon-mipmap-xxxhdpi-192x192.png": f"{android_base}/mipmap-xxxhdpi/ic_launcher.png",
    }
    
    print("üîÑ –ó–∞–º–µ–Ω–∞ –∏–∫–æ–Ω–æ–∫ Android...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∫–æ–Ω–æ–∫
    generated_icons = glob.glob("icon-*.png")
    
    if not generated_icons:
        print("‚ùå –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        print("üìã –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ generate_icons.html –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∫–æ–Ω–æ–∫")
        return False
    
    # –ó–∞–º–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫–∏
    replaced_count = 0
    for icon_file, target_path in icon_mappings.items():
        if os.path.exists(icon_file):
            try:
                # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
                os.makedirs(os.path.dirname(target_path), exist_ok=True)
                
                # –ö–æ–ø–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫—É
                shutil.copy2(icon_file, target_path)
                print(f"‚úÖ {icon_file} ‚Üí {target_path}")
                replaced_count += 1
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ {icon_file}: {e}")
        else:
            print(f"‚ö†Ô∏è  –§–∞–π–ª {icon_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print(f"\nüéâ –ó–∞–º–µ–Ω–µ–Ω–æ {replaced_count} –∏–∫–æ–Ω–æ–∫ –∏–∑ {len(icon_mappings)}")
    return True

def replace_web_icons():
    """–ó–∞–º–µ–Ω—è–µ—Ç –≤–µ–± –∏–∫–æ–Ω–∫–∏"""
    
    print("\nüåê –ó–∞–º–µ–Ω–∞ –≤–µ–± –∏–∫–æ–Ω–æ–∫...")
    
    # Favicon
    if os.path.exists("icon-Favicon-32x32.png"):
        try:
            shutil.copy2("icon-Favicon-32x32.png", "public/favicon.ico")
            print("‚úÖ favicon.ico –æ–±–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ favicon: {e}")
    
    # Web icon
    if os.path.exists("icon-Web Icon-192x192.png"):
        try:
            shutil.copy2("icon-Web Icon-192x192.png", "public/icon-192.png")
            print("‚úÖ icon-192.png –æ–±–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ web icon: {e}")

def update_manifest():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç Android –º–∞–Ω–∏—Ñ–µ—Å—Ç –¥–ª—è –Ω–æ–≤—ã—Ö –∏–∫–æ–Ω–æ–∫"""
    
    manifest_path = "android/app/src/main/AndroidManifest.xml"
    
    if not os.path.exists(manifest_path):
        print("‚ö†Ô∏è  AndroidManifest.xml –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print("\nüì± –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Android –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞...")
    
    try:
        with open(manifest_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∫–æ–Ω–∫–∏ —É–∂–µ —É–∫–∞–∑–∞–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        if '@mipmap/ic_launcher' in content:
            print("‚úÖ –ò–∫–æ–Ω–∫–∏ –≤ –º–∞–Ω–∏—Ñ–µ—Å—Ç–µ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        else:
            print("‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∫–æ–Ω–æ–∫ –≤ AndroidManifest.xml")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üé® LinguaScribe - –ó–∞–º–µ–Ω–∞ –∏–∫–æ–Ω–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Android –ø—Ä–æ–µ–∫—Ç–∞
    if not os.path.exists("android"):
        print("‚ùå Android –ø—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üìã –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: npx cap add android")
        return
    
    # –ó–∞–º–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫–∏
    android_success = replace_android_icons()
    replace_web_icons()
    update_manifest()
    
    if android_success:
        print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ –ø—Ä–æ–µ–∫—Ç: npx cap sync android")
        print("2. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ Android Studio: npx cap open android")
        print("3. –°–æ–±–µ—Ä–∏—Ç–µ APK –≤ Android Studio")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º–µ–Ω–∏—Ç—å –∏–∫–æ–Ω–∫–∏ Android")
        print("üìã –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª–∏ –∏–∫–æ–Ω–∫–∏ —á–µ—Ä–µ–∑ generate_icons.html")

if __name__ == "__main__":
    main() 